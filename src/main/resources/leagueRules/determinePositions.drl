//created on: Aug 2, 2018
package testRule

//list any import classes here.
import com.lol.model.champions.ChampionListDto;
import java.lang.System;
import com.lol.model.champions.ChampionsAndRoles;
import com.lol.model.champions.Champion;
import com.lol.model.champions.Stats;
import com.lol.model.ChampionRolesEnum;
import com.lol.model.MapPositionsEnum;
import com.lol.model.TeamTypesEnum;
import java.util.List;
import java.util.ArrayList;

//declare any global variables here

rule "MAGES are mostly MID"
	when
		$champ: ChampionsAndRoles(mainRole contains ChampionRolesEnum.MAGE &&
									playedPositions not contains MapPositionsEnum.MID)
	then
		MapPositionsEnum position = MapPositionsEnum.MID;
		List<MapPositionsEnum> positions = $champ.getPlayedPositions();
		
		if(positions == null) {
			positions = new ArrayList<MapPositionsEnum>();
		}
		
		positions.add(position);
		
		$champ.setPlayedPositions(positions);
end

rule "MARKSMEN are mostly BOTTOM"
	when
		$champ: ChampionsAndRoles(mainRole contains ChampionRolesEnum.MARKSMAN &&
									playedPositions not contains MapPositionsEnum.BOTTOM)
	then
		MapPositionsEnum position = MapPositionsEnum.BOTTOM;
		List<MapPositionsEnum> positions = $champ.getPlayedPositions();
		
		if(positions == null) {
			positions = new ArrayList<MapPositionsEnum>();
		}
		
		positions.add(position);
		
		$champ.setPlayedPositions(positions);
end

rule "CONTROLLERS are mostly SUPPORT"
	when
		$champ: ChampionsAndRoles(mainRole contains ChampionRolesEnum.CONTROLLER &&
									playedPositions not contains MapPositionsEnum.SUPPORT)
	then
		MapPositionsEnum position = MapPositionsEnum.SUPPORT;
		List<MapPositionsEnum> positions = $champ.getPlayedPositions();
		
		if(positions == null) {
			positions = new ArrayList<MapPositionsEnum>();
		}
		
		positions.add(position);
		
		$champ.setPlayedPositions(positions);
end

rule "WARDEN TANKS are mostly SUPPORT"
	when
		$champ: ChampionsAndRoles(mainRole contains ChampionRolesEnum.TANK && subroles contains ChampionRolesEnum.WARDEN &&
									playedPositions not contains MapPositionsEnum.SUPPORT)
	then
		MapPositionsEnum position = MapPositionsEnum.SUPPORT;
		List<MapPositionsEnum> positions = $champ.getPlayedPositions();
		
		if(positions == null) {
			positions = new ArrayList<MapPositionsEnum>();
		}
		
		positions.add(position);
		
		$champ.setPlayedPositions(positions);
end

rule "JUGGERNAUT FIGHTERS are mostly TOP"
	when
		$champ: ChampionsAndRoles(mainRole contains ChampionRolesEnum.FIGHTER && subroles contains ChampionRolesEnum.JUGGERNAUT &&
									playedPositions not contains MapPositionsEnum.TOP)
	then
		MapPositionsEnum position = MapPositionsEnum.TOP;
		List<MapPositionsEnum> positions = $champ.getPlayedPositions();
		
		if(positions == null) {
			positions = new ArrayList<MapPositionsEnum>();
		}
		
		positions.add(position);
		
		$champ.setPlayedPositions(positions);
end

rule "DIVER FIGHTERS are JUNGLE and TOP"
	when
		$champ: ChampionsAndRoles(mainRole contains ChampionRolesEnum.FIGHTER && subroles contains ChampionRolesEnum.DIVER &&
									playedPositions not contains MapPositionsEnum.JUNGLE &&
									playedPositions not contains MapPositionsEnum.TOP)
	then
		MapPositionsEnum position1 = MapPositionsEnum.JUNGLE;
		MapPositionsEnum position2 = MapPositionsEnum.TOP;
		List<MapPositionsEnum> positions = $champ.getPlayedPositions();
		
		if(positions == null) {
			positions = new ArrayList<MapPositionsEnum>();
		}
		
		positions.add(position1);
		positions.add(position2);
		
		$champ.setPlayedPositions(positions);
end

rule "SKRIMISHER SLAYERS can be played TOP"
	when
		$champ: ChampionsAndRoles(mainRole contains ChampionRolesEnum.SLAYER && subroles contains ChampionRolesEnum.SKRIMISHER &&
									playedPositions not contains MapPositionsEnum.TOP)
	then
		MapPositionsEnum position = MapPositionsEnum.TOP;
		List<MapPositionsEnum> positions = $champ.getPlayedPositions();
		
		if(positions == null) {
			positions = new ArrayList<MapPositionsEnum>();
		}
		
		positions.add(position);
		
		$champ.setPlayedPositions(positions);
end

rule "ASSASSIN SLAYERS can be played MID"
	when
		$champ: ChampionsAndRoles(mainRole contains ChampionRolesEnum.SLAYER && subroles contains ChampionRolesEnum.ASSASSIN &&
									playedPositions not contains MapPositionsEnum.MID)
	then
		MapPositionsEnum position = MapPositionsEnum.MID;
		List<MapPositionsEnum> positions = $champ.getPlayedPositions();
		
		if(positions == null) {
			positions = new ArrayList<MapPositionsEnum>();
		}
		
		positions.add(position);
		
		$champ.setPlayedPositions(positions);
end

rule "ARTILLERY MAGES can be played SUPPORT"
	when
		$champ: ChampionsAndRoles(mainRole contains ChampionRolesEnum.MAGE && subroles contains ChampionRolesEnum.ARTILLERY &&
									playedPositions not contains MapPositionsEnum.SUPPORT)
	then
		MapPositionsEnum position = MapPositionsEnum.SUPPORT;
		List<MapPositionsEnum> positions = $champ.getPlayedPositions();
		
		if(positions == null) {
			positions = new ArrayList<MapPositionsEnum>();
		}
		
		positions.add(position);
		
		$champ.setPlayedPositions(positions);
end

rule "SPECIALISTS can be played TOP and MID"
	when
	$champ: ChampionsAndRoles(mainRole contains ChampionRolesEnum.SPECIALIST &&
									playedPositions not contains MapPositionsEnum.MID &&
									playedPositions not contains MapPositionsEnum.TOP)
	then
		MapPositionsEnum position1 = MapPositionsEnum.TOP;
		MapPositionsEnum position2 = MapPositionsEnum.MID;
		List<MapPositionsEnum> positions = $champ.getPlayedPositions();
		
		if(positions == null) {
			positions = new ArrayList<MapPositionsEnum>();
		}
		
		positions.add(position1);
		positions.add(position2);
		
		$champ.setPlayedPositions(positions);
end

rule "Battlemages with Hp Regen >= 6.6 can be played TOP"
	when
		$champ: ChampionsAndRoles(mainRole contains ChampionRolesEnum.MAGE
									 && subroles contains ChampionRolesEnum.BATTLEMAGE
									 && champion.stats.hpregen >= 6.6 &&
									playedPositions not contains MapPositionsEnum.TOP)
	then
		MapPositionsEnum position = MapPositionsEnum.TOP;
		List<MapPositionsEnum> positions = $champ.getPlayedPositions();
		
		if(positions == null) {
			positions = new ArrayList<MapPositionsEnum>();
		}
		
		positions.add(position);
		
		$champ.setPlayedPositions(positions);
end

rule "SPECIALISTS range > 400 and AD > 59 can be played BOTTOM AND JUNGLE"
	when
		$champ: ChampionsAndRoles(mainRole contains ChampionRolesEnum.SPECIALIST && 
									champion.stats.attackrange > 400 && champion.stats.attackdamage > 59 &&
									playedPositions not contains MapPositionsEnum.BOTTOM && 
									playedPositions not contains MapPositionsEnum.JUNGLE)
	then
		MapPositionsEnum position1 = MapPositionsEnum.BOTTOM;
		MapPositionsEnum position2 = MapPositionsEnum.JUNGLE;
		List<MapPositionsEnum> positions = $champ.getPlayedPositions();
		
		if(positions == null) {
			positions = new ArrayList<MapPositionsEnum>();
		}
		
		positions.add(position1);
		positions.add(position2);
		
		$champ.setPlayedPositions(positions);
end

rule "SPECIALISTS attackrange > 400 and AD < 52 and armor > 20 are SUPPORTS"
	when
		$champ: ChampionsAndRoles(mainRole contains ChampionRolesEnum.SPECIALIST && 
								  champion.stats.attackrange > 400 && champion.stats.attackdamage < 52 && champion.stats.armor > 20 &&
									playedPositions not contains MapPositionsEnum.SUPPORT)
	then
		MapPositionsEnum position = MapPositionsEnum.SUPPORT;
		List<MapPositionsEnum> positions = $champ.getPlayedPositions();
		
		if(positions == null) {
			positions = new ArrayList<MapPositionsEnum>();
		}
		
		positions.add(position);
		
		$champ.setPlayedPositions(positions);
end

rule "VANGUARD TANKS AD > 59.8 and armor+mr > 67 are SUPPORTS"
	when
		$champ: ChampionsAndRoles(mainRole contains ChampionRolesEnum.TANK && subroles contains ChampionRolesEnum.VANGUARD && 
								  champion.stats.attackdamage > 59.8 && (champion.stats.armor + champion.stats.spellblock) > 67 &&
									playedPositions not contains MapPositionsEnum.SUPPORT)
	then
		MapPositionsEnum position = MapPositionsEnum.SUPPORT;
		List<MapPositionsEnum> positions = $champ.getPlayedPositions();
		
		if(positions == null) {
			positions = new ArrayList<MapPositionsEnum>();
		}
		
		positions.add(position);
		
		$champ.setPlayedPositions(positions);
end

rule "VANGUARD TANKS AD >= 62 are TOP"
	when
		$champ: ChampionsAndRoles(mainRole contains ChampionRolesEnum.TANK && subroles contains ChampionRolesEnum.VANGUARD && 
								  champion.stats.attackdamage >= 62 &&
									playedPositions not contains MapPositionsEnum.TOP)
	then
		MapPositionsEnum position = MapPositionsEnum.TOP;
		List<MapPositionsEnum> positions = $champ.getPlayedPositions();
		
		if(positions == null) {
			positions = new ArrayList<MapPositionsEnum>();
		}
		
		positions.add(position);
		
		$champ.setPlayedPositions(positions);
end

/*--------------------------------Champions that are hard to generalize--------------------------------*/

rule "VANGUARD TANKS that are JUNGLE"
	when
		$champ: ChampionsAndRoles(mainRole contains ChampionRolesEnum.TANK &&
								  subroles contains ChampionRolesEnum.VANGUARD && 
								  (name == "Zac" || name == "Gragas" || name == "Rammus" || name == "Sejuani" || name == "Amumu") &&
									playedPositions not contains MapPositionsEnum.JUNGLE)
	then
		MapPositionsEnum position = MapPositionsEnum.JUNGLE;
		List<MapPositionsEnum> positions = $champ.getPlayedPositions();
		
		if(positions == null) {
			positions = new ArrayList<MapPositionsEnum>();
		}
		
		positions.add(position);
		
		$champ.setPlayedPositions(positions);
end

rule "SLAYERS that are JUNGLE"
	when
		$champ: ChampionsAndRoles(mainRole contains ChampionRolesEnum.SLAYER &&
								  (name == "Evelynn" || name == "Kayn" || name == "Kha'Zix" 
								  || name == "Nocturne" || name == "Shaco" || name == "Jax" 
								  || name == "Master Yi" || name == "Tryndamere") &&
									playedPositions not contains MapPositionsEnum.JUNGLE)
	then
		MapPositionsEnum position = MapPositionsEnum.JUNGLE;
		List<MapPositionsEnum> positions = $champ.getPlayedPositions();
		
		if(positions == null) {
			positions = new ArrayList<MapPositionsEnum>();
		}
		
		positions.add(position);
		
		$champ.setPlayedPositions(positions);
end

rule "SKRIMISHER SLAYERS that are MID"
	when
		$champ: ChampionsAndRoles(mainRole contains ChampionRolesEnum.SLAYER &&
								  subroles contains ChampionRolesEnum.SKRIMISHER && 
								  (name == "Yasuo") &&
									playedPositions not contains MapPositionsEnum.MID)
	then
		MapPositionsEnum position = MapPositionsEnum.MID;
		List<MapPositionsEnum> positions = $champ.getPlayedPositions();
		
		if(positions == null) {
			positions = new ArrayList<MapPositionsEnum>();
		}
		
		positions.add(position);
		
		$champ.setPlayedPositions(positions);
end

rule "Ivern, Kindred and Kai'Sa are Jungle because of passives or Abilities"
	when
		$champ: ChampionsAndRoles(name == "Ivern" || name == "Kindred" && name == "Kai'Sa" &&
									playedPositions not contains MapPositionsEnum.JUNGLE)
	then
		MapPositionsEnum position = MapPositionsEnum.JUNGLE;
		List<MapPositionsEnum> positions = $champ.getPlayedPositions();
		
		if(positions == null) {
			positions = new ArrayList<MapPositionsEnum>();
		}
		
		positions.add(position);
		
		$champ.setPlayedPositions(positions);
end
